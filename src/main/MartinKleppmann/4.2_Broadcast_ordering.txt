the broadcast protocols generalize the type of network communication that we can do in a distributed system.


we're mostly going to assume that the set of nodes in the group is fixed and known in advance, but in general, you may have a system in which nodes can join and leave, or be added or removed by an administrator. that is something that real protocols need to deal with.

======================
Broadcast protocols
======================
Broadcast (multicast) is group communication:
    1. One node sends message, all nodes in group deliver it
    2. Set of group members may be fixed (static) or dynamic
    3. If one node is faulty, remaining group members carry on(fault tolerance)
    4. Note: concept is more general than IP multicast (we build upon point-to-point messaging)

 there are a couple of different implementations of broadcast or multicast, one that you might have come across in the context of computer networking, is that some local area networks support broadcast or multicast at hardware level. this is quite useful on local area networks, generally, that kind of multicast does not work over the public internet. so what we will consider in this course is more general form of multicast or broadcast, where we assume that the underlying network only provides point-to-point messaging as in uni-cast, and we are going to build broadcast protocols on top of that. so the underlying network just allows us to send a message from one node to one other node, but on top of that we can build broadcast as an abstraction of that, we then can use for higher level procotols.

https://colobu.com/2014/10/21/udp-and-unicast-multicast-broadcast-anycast/
单播(unicast): 是指封包在计算机网络的传输中，目的地址为单一目标的一种传输方式。它是现今网络应用最为广泛，通常所使用的网络协议或服务大多采用单播传输，例如一切基于TCP的协议。
组播(multicast): 也叫多播， 多点广播或群播。 指把信息同时传递给一组目的地址。它使用策略是最高效的，因为消息在每条网络链路上只需传递一次，而且只有在链路分叉的时候，消息才会被复制。
广播(broadcast):是指封包在计算机网络中传输时，目的地址为网络中所有设备的一种传输方式。实际上，这里所说的“所有设备”也是限定在一个范围之中，称为“广播域”。
任播(anycast):是一种网络寻址和路由的策略，使得资料可以根据路由拓朴来决定送到“最近”或“最好”的目的地。

在Linux运行ifconfig, 如果网卡信息中包含UP BROADCAST RUNNING MULTICAST，则支持广播和组播




Build upon system models from lecture 2:
1. Can be best-effort (may drop messages) or
2. reliable (non-faulty nodes deliver every message, by retransmitting dropped messages)

Asynchronous/ partially synchronous timing model => no upper bound on message latency
we're not going to assume any upper bound on message latency, we can say that the messages will eventually get through, but we're not making any promises about how long it might take until the message might get through.

int the context of point-to-point network links, we have talked about sending and receiving messages over the network, whereas in the context of broadcast protocols, we talk about broadcasting a message and then delivering it as the counter part, so what happens is the application on one node wants to broadcast a message to the entire group, we call this action to a broadcast, and then the underlying broadcast algorithm may send or receive multiple messages over the network, and there are point-to-point messages that are sent or received. and on some other node, those messages might be received, they get again picked up by the broadcast algorithm. and broadcast algorithm then at some point, then deliver the message to the application.





