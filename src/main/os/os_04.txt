==============================
第二章 操作系统接口
==============================
==============================
L4. 操作系统接口
==============================

todo: 回顾上一节课的东西

系统怎么从上层应用穿透到操作系统(通过接口)


接口(Interface)
那什么是接口? 连接两个东西、信号转换、屏蔽细节...
Interface: electrical circuit linking one device with another and enabling data coded in one format to be transmitted in another


-------------------------------------------
什么是操作系统接口? 连接上层用户和操作系统软件

上层应用程序通过调用函数进入操作系统, 使用这些功能

操作系统接口方便了使用,屏蔽了(硬件的)细节

什么是操作系统接口?都是命令吗?...
问题:操作系统直接面对用户吗?
即用户是怎么用操作系统的?..
-------------------------------------------


看来操作系统接口连接的不是用户

用户如何使用计算机?
1. 命令行
2. 图形按钮
3. 应用程序
这些使用方式如何和接口连接起来的

----------------------------------------------
shell 程序:
int main(int argc, char * argv[]) {
    char cmd[20];
    while(1) {
        scanf(“%s”, cmd);
        if(!fork()) {
            exec(cmd);
        } else {
            wait();
        }
    }
}

----------------------------------------------------------------------------
图形按钮基于消息机制:

硬件输入 ---> 消息系统队列
                 |
                 |                          应用程序
                 |----->应用消息队列i -----> |-----------------|
           WM_MOUSEDOWN                    |  WinMain()      |
                                           |-----------------|
                                           |  消息循环         |
                                           |  (GetMessage)   |
                                           |   |       |     |
                                           |-----------------|
                                               |       |
                                           WinProc1  WinProc2
                                           这里根据不同的消息执行不同的函数,
                                           实现对应的功能

----------------------------------------------------------------------------
再回到那个问题, 什么是操作系统接口?
1. 命令行:命令程序
2. 图形界面:消息框架程序+消息处理程序
=====> 用户使用计算机:通过程序(应用软件)



操作系统接口:
连接谁?连接操作系统和应用软件;
如何连接? C语言程序

普通C代码加上些重要的函数
所以, 操作系统提供这样的重要函数
这就是操作系统接口了: 接口表现为函数调用, 又由系统提供, 所以称为系统调用

===================================================================
什么是操作系统接口? 系统调用

POSIX: Portable Operating System Interface of Unix(IEEE制定的一个标准族)
系统调用不变, 不同的应用程序, 加上相同的操作系统接口调用, 那么应用程序可以在不同的操作系统上跑
分类          POSIX定义         描述
-----------------------------------------
任务管理       fork             创建一个进程
              execl            运行一个可执行程序
              pthread_create   创建一个线程
-----------------------------------------
文件系统       open             打开一个文件或目录
             EACCES            返回值， 表示没有权限
             mode_t st_mode    文件头结构: 文件属性

===================================================================












