伴鱼
1、分布式id生成器
虽然目前开源社区有许多的分布式ID生成器，但是Golang社区还没有一个比较好的开源方案，伴鱼作为一个服务器端all in Golang的公司来说，去做这一件事情，并且贡献给开源社区是一个很好的选择

3、NewSql时代的Proxy
开源社区已经有非常多的Mysql Proxy了，为什么伴鱼还要做自己的Proxy呢？
主要的原因是目前的Mysql Proxy的设计目标都主要是为了解决Mysql数据库在实际场景中遇到的问题，重分库分表等功能，但是目前这些问题已经被NewSql完美解决了，而NewSql时代数据库会更倾向于大集群的方案，所以我们非常需要一个有数据库治理功能的Proxy，提供发现、熔断、降级、监控等等服务治理功能，确保不管任何时候、出现了任何问题，Proxy都能保障后端数据库不受到影响。目前开源社区没有一个Proxy能提供这样的功能，而伴鱼的业务对稳定性要求非常非常高，所以我们决定来打造这样一款Proxy并且开源，让那些像我们一样正在忍受这个问题的工程师们的心情能够更开心一点。






协作方式:
https://tech.ipalfish.com/blog/2020/03/22/cooperation/
现在在伴鱼技术中台，每一个新项目的开发流程是这样的：
1. 项目的 Owner 负责调研国内外一线大厂的方案，特别是 Google、Facebook 等大厂的论文，然后结合我们的需求，形成技术方案的初稿；
2. 项目的 Owner 在组内进行技术评审，不论是作为技术评审还是技术分享质量都需要达到要求，才能算组内评审通过；
3. 在公司范围内发起该项目的技术评审，邀请大家来参加，由于是研发工程师非常关心的主题，所以大家的参与度会很高，并且技术评审又兼顾了技术分享，大家可以充分的讨论和交流，使得同时达到技术评审和技术分享的目的。而且良好的技术分享质量会建立起口碑，后续的技术评审业务部门研发工程师的参与意愿会更高。
4. 到这里还没有完，还有一个非常关键的部分，项目做完后，Owner 需要写一篇文章来对这个项目进行归纳和总结，这篇文章会放公司的技术博客上面，也会在公司范围内分享。

高效影响，值得一试的轮岗制度
这是本文中伴鱼技术中台唯一还没有实践但是一定会尝试的机制。其实这是受到一个偶然机会启发的，有一次业务部门找技术中台借调一个工程师去支持一个紧急需求，差不多一个星期的时间。在这一个星期中借调工程师发现了一些共性问题，业务部门有一些地方没有采用技术中台最新的技术方案，导致一些最新的能力没有在业务部门发挥出来，这是我们非常不期望的事情。

目前技术中台和业务部门的沟通其实是非常顺畅的，我们所有新的技术方案也会实时公告给业务部门，但是业务部门的关注点在业务迭代上，通知与公告这一类的浅影响是很难推动业务部门进行升级的，而轮岗却是一种非常深度的影响方式。一个业务工程师和一个中台工程师交换工作岗位一个星期，业务工程师到技术中台部门工作，充分了解目前技术中台的做事方式和最新的技术方案，中台工程师到业务部门工作，如果发现一些技术债务，则将目前技术中台最佳实践告诉大家，通过这种高效、深度的影响来拉齐中台和业务部门的技术实践方式。


永远招聘
https://tech.ipalfish.com/blog/2020/03/20/recruitment/


一、 只招聘成年人
1、 成年人是指职业素养成熟的人
职业素养成熟的人，会遵守基本的规章制度，严格履行自己的承诺，是对自己有高要求的人。如果对于某些规章制度觉得不太合理，欢迎提出挑战，一起去推动规章制度的优化，在规章制度未修改之前，我们依然需要遵守它；我们对他人的承诺，一定要严格履行，如果因为种种原因确实无法完成，那么应该提前沟通，让对方了解不能完成的原因，并且争取对方的理解，做到凡事有交代，件件有着落，事事有回音；对自己有高要求，是自我成长的原始动力，我们只有事事提高要求，才能得到完美的结果，自己才能不断得到提高，对合作者也是良好的体验。

总的来说，职业素养成熟的人，就是会进行自我管理的人。

2、 成年人不仅能发现问题，更能解决问题
我们每天的工作其实就是一个不断发现问题，然后解决问题的过程，如果发现问题后不去解决它，只是抱怨，那么我们只能知道目前的是情况有多糟糕，而没有其他的任何价值，存在的问题依然存在。只有主动去把问题梳理清晰，主动去解决它，我们的情况才会越来越好。能发现问题，说明你了解目前的情况，你是不错的，但是只有你主动去解决它，才能体现你的价值，才能算一个成年人。

3、成年人最渴望的奖励是成功
怎么去激励员工是一件非常重要的事情，福利、薪资和晋升是很通用的方式，但是如果让大家选择自己职业生涯中最珍视的一段经历的时候，几乎所有人都会选择经过艰辛的努力而完成一件有挑战工作的成功经历。对于一个成年人来说，工作中的成功带来强烈的满足感是其他激励方式远远达不到的，所以我们要招聘成年人，给他足够的信任和权利，让他承担足够大的责任，尽我们所有的力量帮助他们获得成功，这样团队才能成功。

对于成年人来说，最好的团建就是大家一起打胜仗，最好的激励是成功。

二、 用超高的人才密度吸引人才
1、 优秀的同事和艰巨的挑战是吸引人才关键的因素
明确的晋升之路对人才是有吸引力的，但是对于优秀的人才来说，艰巨的挑战和与优秀的同事一起去迎接挑战会更有吸引力，因为这是获得成功的前提条件。

千里马常有，而伯乐不常有，大家寻找新的工作机会的时候，都会非常关心将要做什么，会和谁一起合作，能不能实现自己的价值，能不能把事情做成功，所以打造超高人才密度的团队，高目标高要求的做事情方式，对人才的吸引力是非常大的。

2、 所有人都渴望和高绩效者合作
推动业务增长的传统模式是增加人员、扩大规模，但这也意味着沟通成本增加，整体效率会下降。《人月神话》详细论述了这种情况，并且给出了解决方案，打造精简的高绩效团队。优秀的人才相信10倍程序员理论，认同自己的能力等于身边同事的平均水平，那么渴望和高绩效者合作是最自然不过得事情了。

如果团队的成员都是高绩效者，那么大家的沟通和协助的成本会非常低，事情的推进会非常快，不断的挑战并且不断获得成功，获得的成就感和满足感是其他所有激励都无法做到的。

所以对于团队管理者来说，如果只能做一件事情，那么一定是为大家寻找优秀的同事。

3、 不要让规章制度限制了高绩效者
对于工作场景来说，员工的能力就是生产力，规章制度就是生成关系。每一阶段的生产力都会有同一阶段生成关系来匹配，当生产力快速发展，突破了当前阶段，现阶段的生成关系就会限制生产力的发展。

高绩效员工和高绩效团队的生产力在日常工作中会快速的进化，所以我们要打造简单的规章制度，最大程度给员工自由，同时不断优化现行的规章制度，一定要防止规则制度限制了员工的发挥。

对于管理者来说，招聘优秀的员工是最重要的事情，其次就是不断优化规章制度，一定要防止规则制度限制了高绩效员工的发挥。

三、 员工与岗位的关系，是高度匹配的关系
1、 结果导向，高度敬业不代表高绩效
员工的价值是不能通过敬业度来衡量的，对于程序员来说更是如此，我们相信10倍程序员理论，高绩效程序员能通过优良的设计来高效的完成工作，而另外一些则会掉入焦油坑，投入大量的时间和精力而举步维艰，无法自拔。

以结果为导向，通过产出来衡量绩效是最有效的评估方法，但是我们并不否认高度敬业的价值，高度敬业依然是我们非常推崇的价值观，不过它只是我们达到高绩效的一个手段，而不是我们的行动的最终目标。

2、 每月进行一次评估
斯科特·博曼（Scotty Bowman），他曾经是北美职业冰球联盟的教练，有着非常显赫的职业生涯，他在总结取得如此成就时说：我们一个赛季有80场比赛。每完成10场比赛，我就会和他们每一个人坐下来。我会带上他们所有的数据，包括询问其他人，也就是询问其他教练以及队员获得的反馈意见。球员们会带上自我评估报告。然后，我们会讨论在接下来的10场比赛中该怎么做。”

职业球队的竞争是非常激烈的，直接通过比赛成绩来评价球队的绩效，只有高频地对队员进行评价和反馈，不断校正大家行为和目标，才能使得整个团队达到最好的状态。我们的团队，虽然不能通过定期的比赛来直接评定成绩，但是高频对成员进行评估和校正依然是提高团建水平的重要手段。

3、员工保留不是团队建设的目标
用球队做类比有助于员工管理，其中一个原因就是让每个人都能够理解，假如教练不换掉那些无法创造最好成绩的选手的话，就会让球队中的其他人和球迷大失所望。能否赢得比赛是衡量球队成功与否的唯一指标，这也正是在表现一流的球队中，不光选手，就连教练也容易被更换的原因。

如果员工不能高度匹配岗位，我们需要通过高频的评估和及时校正，帮助员工匹配岗位的要求。帮助组员成长，是每一个leader工作中最重要的部分，但是如果最终依然不能匹配岗位，那么推荐他去一家新公司也是一个选择。

这不是淘汰，只是匹配度的问题，很多员工找到一个匹配他的公司后，又成为一个高绩效者的情况是非常常见的。我们会努力帮助每一位员工成长，如果有员工要离开，那么我们要好好和他说再见。

总结
对于永远招聘这一条行为准则，是要求我们时刻保持招聘状态，对一个团队leader来说，如果只能做一件事情，那么一定是寻找优秀的人，因为我们只有招聘到优秀的人，才能打造优秀的团队，然后通过优秀的团队再吸引优秀的团队加入，如果员工与岗位不再高度匹配，那么我们通过高频的评估来校正，帮助大家成长。







虽然 Google 在 2012 年发布了 NewSQL 数据库 Spanner 的论文



使用 TiUP 升级 TiDB
https://docs.pingcap.com/zh/tidb/stable/upgrade-tidb-using-tiup




1. 科学的评估方法:
四轮面试准则
面试官通过4轮面试就可以有86%的自信确认是否聘用候选人，4轮面试之后的每一轮面试仅可能提高1%的效用，所以不值得浪费伴鱼人和候选人的时间和增加了候选人的心理压力，我们的面试轮次最多为四次，当然特殊的情况可以适当增加。

样例测试
预测候选人在工作中的表现最好的方法是工作样例测试，预测准确度为29%。这种方法需要安排候选人完成一项与其将要负责岗位工作中类似的工作样例，然后评估他们的表现。比如让候选人编写一段算法代码，解释一段代码的含义，做一个架构设计等。当然这种方法也不能无偏差地预测工作表现，因为实际的工作表现还取决其他技能，比如与同事的合作能力，责任心和学习能力等等。

一般认知能力测试
预测候选人在工作中的表现有效性排第二位的方法是一般认知能力测试，预测准确度为26%。一般认知能力不完全等同于智商，但和智商密切相关，主要包括理解能力、学习能力、抽象思维能力和解决问题的能力等。一般认知能力是有标准的测试方法，对于国内来说，高考成绩是一个比较好的参考标准，但是也不够准确，数学、物理和化学非常优秀，语文和外语非常差的严重偏科的候选人也很常见。在面试过程中，通过讨论一些超出候选人知识和经验范围的问题，在给予必要的背景知识的情况下，观察候选人能否快速理解和学习背景知识，并且运用它来解决问题也是一个比较好的办法。

结构化测试
结构化测试和一般认知能力测试的有效性相当，预测准确度为26%。结构化测试的每一个问题都有明确的应答评估标准，它会让对于候选人的评估完全是基于候选人的表现，而不是面试官的评价标准高低和问题的难易。结构化测试有两种类型：行为测试和情景测试。行为测试要求候选人讲述过去的成就，并于当前的工作进行对比；情景测试会虚拟一个与工作相关的场景。面试官需要深入评估候选人的故事的可信度和思考过程。

例如：讲一次你的行为对团队带来积极影响的一次经历。（追问：你最初的目标是什么？为什么？你的队友如何反应？之后你有什么计划？）

尽责性评估
尽责性评估的预测准确度为10%。尽责性评估是指候选人把工作彻底完成还是做到差不多就行。一般来说尽责性评估高的候选人有更强的责任心，更有owner意识。尽责性评估需要和一般认知能力测试组合评估才能更加有效，预测准确度达到36%。这个也符合直觉，一个聪明并且责任心强的人大体不会太差。尽责性评估一般可以通过结构化测试来进行评估。

面试之外的评估
如果候选人的简历上有技术博客和github等信息，那么面试官一定要花时间看看，并且确认是否为候选人原创，总的来说，优秀的原创内容和足够的作品数量对以后工作预测准确度是很高的。另外如果恰好有同事或者朋友与候选人共事过，那么可以好好去做一下背景调查，一起共事的评价是非常有效的评估方法（但是背景调查不能影响候选人目前的工作，比如不能对候选人现在的同事和leader做背景调查等）。


2. 伴鱼人需要的关键能力
候选人有各种各样的能力，但是对于招聘来说，我们应该关注胜任岗位需要的能力–胜任力模型，即候选人拥有这些能力，就一定能够很好的胜任招聘岗位的工作。这里要区分一下能力和知识，能力是只需要长时间才能培养出来的技能，知识是短时间学会的客观事实和主观经验。所以在招聘过程中候，我们要重点对能力进行考察，因为如果能力不合格就会导致不能胜任岗位，并且培养周期可能需要以年为单位来计算的；对于知识的方面，如果有某些不全面的地方，这个培养周期是很短的，是公司和候选人都可以负担的起的事情，不过对于专业基础理论的系统性是有要求的，因为这也是一个需要很长的时间才能培养。

总的来说就是，在面试考察过程中，对短时间可以改变或者学习的，可以放低考察要求，对于长时间才能改变或者培养的，必须要重点考察。下面是伴鱼对于研发工程师的胜任力模型的描述。

一般认知能力
因为我们的工作需要不断创新，经常会碰到各种未知的情况，所以我们想要聘用可以快速理解问题，通过快速学习来适应新的环境，并且能解决问题的人，因此一般认知能力是非常关键的能力。我们要通过候选人在现实生活中遇到未知问题时是如何学习和解决问题来进行评估（上文中一般认知能力测试的方法），而不是简单查看他的成绩和学校来决定。

Palfishyness（像伴鱼人一样）
我们希望加入伴鱼的候选人都能发展的非常好，所以我们要找和伴鱼的特征和气质相符的Palfishyness。Palfishyness包括一些特质，比如热情，谦逊，心态开放，责任心强，自我驱动，渴望接受挑战，能够自我管理的成年人。Palfishyness可以通过结构化测试、尽责性评估以及面试之外的一些方法进行评估。

计算机科学理论
计算机应用技术的发展是日新月异的，但是它依赖的基础计算机科学理论几十年来变化不大，所以计算机科学理论知识扎实的人是可以很轻松应对计算机应用技术的变化，做到举一反三的，而反过来却不能成立。计算机科学理论是比较好评估的，可以通过有确定正确答案的问题来进行评估，另外样例测试也是非常有效的评估手段。

工作经验
工作经验对于工作年限短（二年以内）的候选人评估的价值不大，但是对于工作年限长（二年以上）的候选人是非常有效的评估手段，因为如果一个候选人工作年限很长，但是工作经验依然没有亮点，那么很大程度可以评估出他的计算机科学理论、一般认知能力和Palfishyness相关的综合能力是不够优秀的。工作经验可以通过样例测试、结构化测试和面试之外的信息来综合进行评估。


三、详细记录
我们要详细纪录面试中所有讨论的问题、候选人的答案以及面试官给出的评价，而不是仅仅是简单的记录评估结果，这样后续的面试官能够通过面试纪录中的问题和答案再进行评估，确保对候选人的评价能够更加客观。

并且，通过对于候选人入职的表现和面试时的评估纪录进行对比，可以不断调优我们的招聘流程和评估机制，使得我们的招聘变成一台可以不断修正的机器。

例如：索引优化：候选人掌握前缀原则，了解二级索引和主键索引的区别，但是不知道可以利用覆盖索引来避免回表。


四、面试SOP
1、面试前：
提前看候选人简历，如果候选人简历上有技术博客和github，提前读一读；
面试前5分钟做好准备，一定不能迟到；
2、面试中：
  1. 我们一定要确保面试能够客观评价候选人，同时更应该确保是一次愉快交流；
  3. 详细纪录面试中讨论的问题、候选人的答案以及面试官给出的评价，而不是简单的记录评估结果；
  4. 每一轮面试，除了主要考察的关键能力，其他的关键能力都可以交叉考察；
  5. 第一面为基础素质面试，主要考察计算机科学理论和一般认知能力，包含但不限于写算法代码，深入讨论计算机科学理论相关的主题，同时初步确定候选人的方向（确定的业务线或者中台方向），hr将第二面安排给相应方向的负责人；
  6. 第二面为综合素质面试，主要考察工作经验和Palfishyness，包含但不限于对工作项目和架构设计方面的讨论，以及对于Palfishyness的结构化测试和尽责性评估。同时，面试官分享伴鱼技术博客给候选人（https://tech.ipalfish.com/blog/ ），并且给候选人一个值得加入的理由（比如有挑战的工作和优秀的同事）；
  7. 如果候选人定级在P7或者以上，需要增加CTO面，对综合素质进行全面考察；
  8. 第四面为HR面试，主要考察Palfishyness；
  9. 每一轮留出5-10分钟时间给候选人问问题，面试官要和候选人坦诚地进行交流；
  10. 如果候选人将加入团队的leader没有参与前面的面试，需要增加一轮面试；

3、面试后：
  1. HR收集候选人的面试体验评价，如果有问题需要安抚好候选人，反馈给当事面试官并进行复盘；
  2. 所有参与的面试官对照面试纪录一起评估候选人，每个面试官的意见都同等重要，确认是否录用候选人；
  3. HR和候选人将加入团队的leader一起负责跟进。



伴鱼技术中台组织架构的演进
上面阐述了伴鱼对中台组织架构的理解：中台化组织架构应该提高事情的复用率和组织的沟通效率，并在这一基础上提供强大的产品或服务能力。下面我们讲述在这一原则下伴鱼技术中台组织架构的演进过程。

第一个阶段是基础架构阶段，这是伴鱼技术中台的初始阶段，当时只是服务器基础架构组，负责基础服务、微服务框架和服务治理相关的事情，不过当时DBA是属于基础架构组的，这是因为我们认为DB是基础架构非常重要的一部分，DBA和基础架构的需要密切沟通和深度配合的，比如数据库路由可以理解为服务发现的一部分，熔断降级等服务治理的方法其实对数据库治理同样非常关键，这是中台化思想在组织架构上落地最初形式。

第二个阶段是平台化阶段，这个时候已经正式成立了伴鱼技术中台部门，前面的服务器基础架构团队和DBA团队加上运维研发团队、WEB、安卓和 IOS 基础架构团队合并为伴鱼技术中台，并推行SRE文化，各团队都开始将一些需要人工管理的事情平台化，由于技术中台部门包含前端和后端的基础架构团队，所以沟通和配合效率非常高，这一段时间推出了各种各样的平台，并且所有的平台都提供企业级服务能力，比如发布系统、灰度系统、数据库平台、报警平台、APM平台、账号平台、存储中心、安全中心等等

第三个阶段是中台化阶段，这个也是伴鱼技术中台目前所处的阶段，现在开始，对内我们挖掘平台之间的价值，对外关注业务使用上的研发体验。挖掘平台之间的价值，其实就是做平台之上的平台，打通多个相关平台的数据和接口，提供产品和服务能力更好的平台；另外也从研发体验的角度出发，从使用角度将一些场景相近和关联的平台相互融合，提供统一、简单的使用方式。并且，在平台的融合与调整中，为了获得最好的沟通效率，内部组织架构也会做响应的调整。现在正在进行的A/B Testing平台（从数据上报、指标分析和指标信度评估等全功能统一的A/B Testing平台）、触达平台（打造统一的触达用户的智能平台）和统一前后端的性能分析平台（全业务和全场景的性能分析平台）等都是在这个方向上的努力工作。



